# For most projects, this workflow file will not need changing; you simply need
# to commit it to your repository.
#
# You may wish to alter this file to override the set of languages analyzed,
# or to provide custom queries or build steps.
#
# ******** NOTE ********
# We have attempted to detect the languages in your repository. Please check
# the `language` matrix defined below to confirm you have the correct set of
# supported CodeQL languages.
#
name: "CodeQL Advanced Security Analysis"

on:
  push:
    branches: [ '*' ]  # All branches
    paths:
      - 'packages/app/**'
      - 'packages/backend/**'
      - 'plugins/infrawallet-backend/**'
      - 'plugins/infrawallet/**'
      - 'scripts/**'
      - '**/*.js'
      - '**/*.ts'
      - '**/*.tsx'
      - '**/*.jsx'
  pull_request:
    branches: [ "main" ]  # Only PRs towards main
    paths:
      - 'packages/app/**'
      - 'packages/backend/**'
      - 'plugins/infrawallet-backend/**'
      - 'plugins/infrawallet/**'
      - 'scripts/**'
      - '**/*.js'
      - '**/*.ts'
      - '**/*.tsx'
      - '**/*.jsx'
  schedule:
    - cron: '31 7 * * 3'
  workflow_dispatch:

jobs:
  analyze:
    name: Analyze (${{ matrix.language }})
    runs-on: ${{ (matrix.language == 'swift' && 'macos-latest') || 'ubuntu-latest' }}
    timeout-minutes: ${{ (matrix.language == 'swift' && 120) || 360 }}
    permissions:
      # required for all workflows
      security-events: write
      # required to fetch internal or private CodeQL packs
      packages: read
      # only required for workflows in private repositories
      actions: read
      contents: read

    strategy:
      fail-fast: false
      matrix:
        include:
        - language: javascript-typescript
          build-mode: none
        # Add more languages if needed in the future
        # - language: python
        #   build-mode: none

    steps:
    - name: Checkout repository
      uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4.1.1

    # Initializes the CodeQL tools for scanning.
    - name: Initialize CodeQL
      uses: github/codeql-action/init@v3
      with:
        languages: ${{ matrix.language }}
        build-mode: ${{ matrix.build-mode }}
        # If you wish to specify custom queries, you can do so here or in a config file.
        # By default, queries listed here will override any specified in a config file.
        # Prefix the list here with "+" to use these queries and those in the config file.
        
        # For more details on CodeQL's query packs, refer to: https://docs.github.com/en/code-security/code-scanning/automatically-scanning-your-code-for-vulnerabilities-and-errors/configuring-code-scanning#using-queries-in-ql-packs
        queries: security-extended,security-and-quality
        
        # Configure specific paths to analyze
        config: |
          paths:
            - packages/app
            - packages/backend
            - plugins/infrawallet-backend
            - plugins/infrawallet
            - scripts
          paths-ignore:
            - node_modules
            - '**/node_modules'
            - '**/*.test.js'
            - '**/*.test.ts'
            - '**/*.spec.js'
            - '**/*.spec.ts'
            - '**/test/**'
            - '**/tests/**'
            - '**/build/**'
            - '**/dist/**'

    # Autobuild attempts to build any compiled languages (C/C++, C#, Go, Java, or Swift).
    # If this step fails, then you should remove it and run the build manually (see below)
    - name: Autobuild
      if: matrix.build-mode == 'autobuild'
      uses: github/codeql-action/autobuild@v3

    # ℹ️ Command-line programs to run using the OS shell.
    # 📚 See https://docs.github.com/en/actions/using-workflows/workflow-syntax-for-github-actions#jobsjob_idstepsrun

    # If the Autobuild fails above, remove it and uncomment the following three lines. 
    # modify them (or add more) to build your code if your project, please refer to the EXAMPLE below for guidance.

    # - run: |
    #     echo "Run, Build Application using script"
    #     ./location_of_script_within_repo/buildscript.sh

    - name: Perform CodeQL Analysis
      uses: github/codeql-action/analyze@v3
      with:
        category: "/language:${{matrix.language}}"
        output: results
        upload: true

  # Secret scanning job
  secret-scanning:
    name: Secret Scanning
    runs-on: ubuntu-latest
    permissions:
      security-events: write
      contents: read
    steps:
    - name: Checkout repository
      uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4.1.1
      with:
        fetch-depth: 0  # Full history for better secret detection

    - name: Run Trivy secret scanner
      uses: aquasecurity/trivy-action@0.28.0
      with:
        scan-type: 'fs'
        scan-ref: '.'
        scanners: 'secret'
        format: 'sarif'
        output: 'trivy-secrets.sarif'
        severity: 'CRITICAL,HIGH,MEDIUM'
        
    - name: Upload Trivy scan results to GitHub Security tab
      uses: github/codeql-action/upload-sarif@v3
      if: always()
      with:
        sarif_file: 'trivy-secrets.sarif'
        category: 'secret-scanning'

  # Dependency scanning job
  dependency-scanning:
    name: Dependency Scanning
    runs-on: ubuntu-latest
    permissions:
      security-events: write
      contents: read
    steps:
    - name: Checkout repository
      uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4.1.1

    - name: Run Trivy vulnerability scanner
      uses: aquasecurity/trivy-action@0.28.0
      with:
        scan-type: 'fs'
        scan-ref: '.'
        scanners: 'vuln'
        format: 'sarif'
        output: 'trivy-vuln.sarif'
        severity: 'CRITICAL,HIGH,MEDIUM,LOW'
        
    - name: Upload Trivy scan results to GitHub Security tab
      uses: github/codeql-action/upload-sarif@v3
      if: always()
      with:
        sarif_file: 'trivy-vuln.sarif'
        category: 'dependency-scanning'

  # License scanning job
  license-scanning:
    name: License Scanning
    runs-on: ubuntu-latest
    permissions:
      security-events: write
      contents: read
    steps:
    - name: Checkout repository
      uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4.1.1

    - name: Run Trivy license scanner
      uses: aquasecurity/trivy-action@0.28.0
      with:
        scan-type: 'fs'
        scan-ref: '.'
        scanners: 'license'
        format: 'sarif'
        output: 'trivy-license.sarif'
        severity: 'CRITICAL,HIGH,MEDIUM,LOW,UNKNOWN'
        
    - name: Upload Trivy scan results to GitHub Security tab
      uses: github/codeql-action/upload-sarif@v3
      if: always()
      with:
        sarif_file: 'trivy-license.sarif'
        category: 'license-scanning'

  # SAST scanning with Semgrep
  semgrep:
    name: Semgrep SAST Scan
    runs-on: ubuntu-latest
    permissions:
      security-events: write
      contents: read
    steps:
    - name: Checkout repository
      uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4.1.1

    - name: Run Semgrep
      uses: semgrep/semgrep-action@v1
      with:
        config: >-
          p/security-audit
          p/typescript
          p/javascript
          p/nodejs
          p/react
          p/owasp-top-ten
          p/cwe-top-25
        generateSarif: true

    - name: Upload Semgrep results
      uses: github/codeql-action/upload-sarif@v3
      if: always()
      with:
        sarif_file: semgrep.sarif
        category: 'semgrep'